{"version":3,"file":"js-data-cloud-datastore.js","sources":["../src/index.js"],"sourcesContent":["// Copyright 2016, Google, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n'use strict';\n\nimport {utils} from 'js-data';\nimport Adapter from 'js-data-adapter';\nimport {\n  reserved\n} from 'js-data-adapter';\n\nconst {\n  addHiddenPropsToTarget,\n  classCallCheck,\n  deepMixIn,\n  extend,\n  forOwn,\n  get,\n  isArray,\n  isObject,\n  isString,\n  isUndefined,\n  omit,\n  plainCopy,\n  set\n} = utils;\n\nconst withoutRelations = function (mapper, props) {\n  return omit(props, mapper.relationFields || []);\n};\n\nconst equal = function (query, field, value) {\n  return query.filter(field, '=', value);\n};\n\nconst __super__ = Adapter.prototype;\n\n/**\n * Default predicate functions for the filtering operators.\n *\n * @name CloudDatastoreAdapter.OPERATORS\n * @property {Function} == Equality operator.\n * @property {Function} > \"Greater than\" operator.\n * @property {Function} >= \"Greater than or equal to\" operator.\n * @property {Function} < \"Less than\" operator.\n * @property {Function} <= \"Less than or equal to\" operator.\n */\nconst OPERATORS = {\n  '==': equal,\n  '===': equal,\n  '>': function (query, field, value) {\n    return query.filter(field, '>', value);\n  },\n  '>=': function (query, field, value) {\n    return query.filter(field, '>=', value);\n  },\n  '<': function (query, field, value) {\n    return query.filter(field, '<', value);\n  },\n  '<=': function (query, field, value) {\n    return query.filter(field, '<=', value);\n  }\n};\n\n/**\n * CloudDatastoreAdapter class.\n *\n * @example\n * // Use Container instead of DataStore on the server\n * import {Container} from 'js-data'\n * import CloudDatastoreAdapter from 'js-data-cloud-datastore'\n *\n * // Create a store to hold your Mappers\n * const store = new Container()\n *\n * // Create an instance of CloudDatastoreAdapter with default settings\n * const adapter = new CloudDatastoreAdapter()\n *\n * // Mappers in \"store\" will use the CloudDatastore adapter by default\n * store.registerAdapter('datastore', adapter, { default: true })\n *\n * // Create a Mapper that maps to a \"user\" table\n * store.defineMapper('user')\n *\n * @class CloudDatastoreAdapter\n * @extends Adapter\n * @param {Object} [opts] Configuration opts.\n * @param {string} [opts.basePath=''] TODO\n * @param {boolean} [opts.debug=false] TODO\n */\nexport default function CloudDatastoreAdapter (opts) {\n  const self = this;\n  classCallCheck(self, CloudDatastoreAdapter);\n  opts || (opts = {});\n  Adapter.call(self, opts);\n\n  /**\n   * Override the default predicate functions for specified operators.\n   *\n   * @name CloudDatastoreAdapter#operators\n   * @type {Object}\n   * @default {}\n   */\n  self.operators || (self.operators = {});\n\n  /**\n   * Instance of gcloud used by this adapter.\n   *\n   * @name CloudDatastoreAdapter#gcloud\n   * @type {Object}\n   */\n  self.gcloud = require('gcloud')(opts.gcloud || {\n    projectId: process.env.GCLOUD_PROJECT\n  });\n\n  /**\n   * Instance of gcloud.datastore.dataset used by this adapter.\n   *\n   * @name CloudDatastoreAdapter#dataset\n   * @type {Object}\n   */\n  self.dataset = self.gcloud.datastore.dataset();\n}\n\n// Setup prototype inheritance from Adapter\nCloudDatastoreAdapter.prototype = Object.create(Adapter.prototype, {\n  constructor: {\n    value: CloudDatastoreAdapter,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n});\n\nObject.defineProperty(CloudDatastoreAdapter, '__super__', {\n  configurable: true,\n  value: Adapter\n});\n\n/**\n * Alternative to ES6 class syntax for extending `CloudDatastoreAdapter`.\n *\n * @name CloudDatastoreAdapter.extend\n * @method\n * @param {Object} [instanceProps] Properties that will be added to the\n * prototype of the CloudDatastoreAdapter.\n * @param {Object} [classProps] Properties that will be added as static\n * properties to the CloudDatastoreAdapter itself.\n * @return {Object} CloudDatastoreAdapter of `CloudDatastoreAdapter`.\n */\nCloudDatastoreAdapter.extend = extend;\n\naddHiddenPropsToTarget(CloudDatastoreAdapter.prototype, {\n  /**\n   * Apply the specified selection query to the provided Datastore query.\n   *\n   * @name CloudDatastoreAdapter#filterSequence\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.operators] Override the default predicate functions\n   * for specified operators.\n   */\n  filterQuery (mapper, query, opts) {\n    const self = this;\n    let dsQuery;\n\n    if (opts && opts.query) {\n      dsQuery = opts.query;\n    }\n    query = plainCopy(query || {});\n    opts || (opts = {});\n    opts.operators || (opts.operators = {});\n    query.where || (query.where = {});\n    query.orderBy || (query.orderBy = query.sort);\n    query.orderBy || (query.orderBy = []);\n    query.skip || (query.skip = query.offset);\n\n    // Transform non-keyword properties to \"where\" clause configuration\n    forOwn(query, function (config, keyword) {\n      if (reserved.indexOf(keyword) === -1) {\n        if (isObject(config)) {\n          query.where[keyword] = config;\n        } else {\n          query.where[keyword] = {\n            '==': config\n          };\n        }\n        delete query[keyword];\n      }\n    });\n\n    // Apply filter\n    if (Object.keys(query.where).length !== 0) {\n      forOwn(query.where, function (criteria, field) {\n        if (!isObject(criteria)) {\n          query.where[field] = {\n            '==': criteria\n          };\n        }\n\n        forOwn(criteria, function (value, operator) {\n          let isOr = false;\n          let _operator = operator;\n          if (_operator && _operator[0] === '|') {\n            _operator = _operator.substr(1);\n            isOr = true;\n          }\n          let predicateFn = self.getOperator(_operator, opts);\n          if (predicateFn) {\n            const predicateResult = predicateFn(dsQuery, field, value);\n            if (isOr) {\n              throw new Error(`Operator ${operator} not supported!`);\n            } else {\n              dsQuery = predicateResult;\n            }\n          } else {\n            throw new Error(`Operator ${operator} not supported!`);\n          }\n        });\n      });\n    }\n\n    // Apply sort\n    if (query.orderBy) {\n      if (isString(query.orderBy)) {\n        query.orderBy = [\n          [query.orderBy, 'asc']\n        ];\n      }\n      query.orderBy.forEach(function (clause) {\n        if (isString(clause)) {\n          clause = [clause, 'asc'];\n        }\n        dsQuery = clause[1].toUpperCase() === 'DESC' ? dsQuery.order(clause[0], { descending: true }) : dsQuery.order(clause[0]);\n      });\n    }\n\n    // Apply skip/offset\n    if (query.skip) {\n      dsQuery = dsQuery.offset(+query.skip);\n    }\n\n    // Apply limit\n    if (query.limit) {\n      dsQuery = dsQuery.limit(+query.limit);\n    }\n\n    return dsQuery;\n  },\n\n  /**\n   * Internal method used by CloudDatastoreAdapter#_create and\n   * CloudDatastoreAdapter#_createMany.\n   *\n   * @name CloudDatastoreAdapter#_createHelper\n   * @method\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {(Object|Object[])} records The record or records to be created.\n   * @return {Promise}\n   */\n  _createHelper (mapper, records) {\n    const self = this;\n    const singular = !isArray(records);\n    if (singular) {\n      records = [records];\n    }\n    return new Promise(function (resolve, reject) {\n      let apiResponse;\n      const idAttribute = mapper.idAttribute;\n      const incompleteKey = self.dataset.key([mapper.name]);\n\n      // Remove relations\n      records = records.map(function (record) {\n        return withoutRelations(mapper, record);\n      });\n\n      self.dataset.runInTransaction(function (transaction, done) {\n        // Allocate ids\n        transaction.allocateIds(incompleteKey, records.length, function (err, keys) {\n          if (err) {\n            return reject(err);\n          }\n          const entities = records.map(function (_record, i) {\n            set(_record, idAttribute, keys[i].path[1]);\n            return {\n              key: keys[i],\n              data: _record\n            };\n          });\n          // Save records\n          self.dataset.save(entities, function (err, _apiResponse) {\n            if (err) {\n              return reject(err);\n            }\n            apiResponse = _apiResponse;\n            return done();\n          });\n        });\n      }, function (err) {\n        if (err) {\n          return reject(err);\n        }\n        return resolve([singular ? records[0] : records, apiResponse]);\n      });\n    });\n  },\n\n  /**\n   * Create a new record. Internal method used by Adapter#create.\n   *\n   * @name CloudDatastoreAdapter#_create\n   * @method\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The record to be created.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _create (mapper, props, opts) {\n    return this._createHelper(mapper, props, opts);\n  },\n\n  /**\n   * Create multiple records in a single batch. Internal method used by\n   * Adapter#createMany.\n   *\n   * @name CloudDatastoreAdapter#_createMany\n   * @method\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The records to be created.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _createMany (mapper, props, opts) {\n    return this._createHelper(mapper, props, opts);\n  },\n\n  /**\n   * Destroy the record with the given primary key. Internal method used by\n   * Adapter#destroy.\n   *\n   * @name CloudDatastoreAdapter#_destroy\n   * @method\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to destroy.\n   * response object.\n   * @return {Promise}\n   */\n  _destroy (mapper, id) {\n    const self = this;\n    return new Promise(function (resolve, reject) {\n      self.dataset.delete(self.dataset.key([mapper.name, id]), function (err, apiResponse) {\n        return err ? reject(err) : resolve([undefined, apiResponse]);\n      });\n    });\n  },\n\n  /**\n   * Destroy the records that match the selection query. Internal method used by\n   * Adapter#destroyAll.\n   *\n   * @name CloudDatastoreAdapter#_destroyAll\n   * @method\n   * @private\n   * @param {Object} mapper the mapper.\n   * @param {Object} [query] Selection query.\n   * @return {Promise}\n   */\n  _destroyAll (mapper, query) {\n    const self = this;\n\n    return self.findAll(mapper, query, { raw: false }).then(function (records) {\n      if (records.length) {\n        return new Promise(function (resolve, reject) {\n          const keys = [];\n          const idAttribute = mapper.idAttribute;\n          records.forEach(function (record) {\n            const id = get(record, idAttribute);\n            if (!isUndefined(id)) {\n              keys.push(self.dataset.key([mapper.name, id]));\n            }\n          });\n          self.dataset.delete(keys, function (err, apiResponse) {\n            return err ? reject(err) : resolve([undefined, apiResponse]);\n          });\n        });\n      }\n      return [undefined, {}];\n    });\n  },\n\n  /**\n   * Retrieve the record with the given primary key. Internal method used by\n   * Adapter#find.\n   *\n   * @name CloudDatastoreAdapter#_find\n   * @method\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to retrieve.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _find (mapper, id, opts) {\n    const self = this;\n\n    return new Promise(function (resolve, reject) {\n      const key = self.dataset.key([self.getKind(mapper, opts), id]);\n      self.dataset.get(key, function (err, entity) {\n        if (err) {\n          return reject(err);\n        }\n        return resolve([entity ? entity.data : undefined, {}]);\n      });\n    });\n  },\n\n  /**\n   * Retrieve the records that match the selection query. Internal method used\n   * by Adapter#findAll.\n   *\n   * @name CloudDatastoreAdapter#_findAll\n   * @method\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _findAll (mapper, query, opts) {\n    const self = this;\n\n    return new Promise(function (resolve, reject) {\n      let dsQuery = self.dataset.createQuery(self.getKind(mapper, opts));\n      dsQuery = self.filterQuery(mapper, query, { query: dsQuery });\n      self.dataset.runQuery(dsQuery, function (err, entities) {\n        if (err) {\n          return reject(err);\n        }\n        return resolve([entities ? entities.map(function (entity) {\n          return entity.data;\n        }) : [], {}]);\n      });\n    });\n  },\n\n  /**\n   * Internal method used by CloudDatastoreAdapter#_update and\n   * CloudDatastoreAdapter#_updateAll and CloudDatastoreAdapter#_updateMany.\n   *\n   * @name CloudDatastoreAdapter#_updateHelper\n   * @method\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {(Object|Object[])} records The record or records to be updated.\n   * @param {(Object|Object[])} props The updates to apply to the record(s).\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _updateHelper (mapper, records, props, opts) {\n    const self = this;\n    const singular = !isArray(records);\n    if (singular) {\n      records = [records];\n      props = [props];\n    }\n    return new Promise(function (resolve, reject) {\n      if (!records.length) {\n        return resolve([singular ? undefined : [], {}]);\n      }\n      const idAttribute = mapper.idAttribute;\n      const entities = [];\n      const _records = [];\n      records.forEach(function (record, i) {\n        if (!record) {\n          return;\n        }\n        const id = get(record, idAttribute);\n        if (!isUndefined(id)) {\n          deepMixIn(record, props[i]);\n          entities.push({\n            method: 'update',\n            key: self.dataset.key([self.getKind(mapper, opts), id]),\n            data: withoutRelations(mapper, record)\n          });\n          _records.push(record);\n        }\n      });\n      if (!_records.length) {\n        return resolve([singular ? undefined : [], {}]);\n      }\n      self.dataset.save(entities, function (err, apiResponse) {\n        if (err) {\n          return reject(err);\n        }\n        return resolve([singular ? _records[0] : _records, apiResponse]);\n      });\n    });\n  },\n\n  /**\n   * Apply the given update to the record with the specified primary key.\n   * Internal method used by Adapter#update.\n   *\n   * @name CloudDatastoreAdapter#_update\n   * @method\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id The primary key of the record to be updated.\n   * @param {Object} props The update to apply to the record.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _update (mapper, id, props, opts) {\n    const self = this;\n    props || (props = {});\n\n    return self.find(mapper, id, { raw: false }).then(function (record) {\n      if (record) {\n        return self._updateHelper(mapper, record, props, opts);\n      } else {\n        throw new Error('Not Found');\n      }\n    });\n  },\n\n  /**\n   * Apply the given update to all records that match the selection query.\n   * Internal method used by Adapter#updateAll.\n   *\n   * @name CloudDatastoreAdapter#_updateAll\n   * @method\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The update to apply to the selected records.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _updateAll (mapper, props, query, opts) {\n    const self = this;\n    props || (props = {});\n\n    return self.findAll(mapper, query, { raw: false }).then(function (records) {\n      if (records.length) {\n        return self._updateHelper(mapper, records, records.map(function () { return props; }), opts);\n      }\n      return [[], {}];\n    });\n  },\n\n  /**\n   * Update the given records in a single batch. Internal method used by\n   * Adapter#updateMany.\n   *\n   * @name CloudDatastoreAdapter#_updateMany\n   * @method\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {Object[]} records The records to update.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _updateMany (mapper, records, opts) {\n    const self = this;\n    records || (records = []);\n\n    const idAttribute = mapper.idAttribute;\n\n    return Promise.all(records.map(function (record) {\n      return self.find(mapper, get(record, idAttribute));\n    })).then(function (_records) {\n      if (_records.length) {\n        return self._updateHelper(mapper, _records, records, opts);\n      }\n      return [[], {}];\n    });\n  },\n\n  loadBelongsTo (mapper, def, records, __opts) {\n    if (isObject(records) && !isArray(records)) {\n      return __super__.loadBelongsTo.call(this, mapper, def, records, __opts);\n    }\n    throw new Error('findAll with belongsTo not supported!');\n  },\n\n  loadHasMany (mapper, def, records, __opts) {\n    if (isObject(records) && !isArray(records)) {\n      return __super__.loadHasMany.call(this, mapper, def, records, __opts);\n    }\n    throw new Error('findAll with hasMany not supported!');\n  },\n\n  loadHasOne (mapper, def, records, __opts) {\n    if (isObject(records) && !isArray(records)) {\n      return __super__.loadHasOne.call(this, mapper, def, records, __opts);\n    }\n    throw new Error('findAll with hasOne not supported!');\n  },\n\n  loadHasManyLocalKeys () {\n    throw new Error('find/findAll with hasMany & localKeys not supported!');\n  },\n\n  loadHasManyForeignKeys () {\n    throw new Error('find/findAll with hasMany & foreignKeys not supported!');\n  },\n\n  /**\n   * Resolve the Cloud Datastore kind for the specified Mapper with the given\n   * options.\n   *\n   * @name CloudDatastoreAdapter#getKind\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.kind] Datastore kind.\n   * @return {string} The kind.\n   */\n  getKind (mapper, opts) {\n    opts || (opts = {});\n    return isUndefined(opts.kind) ? (isUndefined(mapper.kind) ? mapper.name : mapper.kind) : opts.kind;\n  },\n\n  /**\n   * Resolve the predicate function for the specified operator based on the\n   * given options and this adapter's settings.\n   *\n   * @name CloudDatastoreAdapter#getOperator\n   * @method\n   * @param {string} operator The name of the operator.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.operators] Override the default predicate functions\n   * for specified operators.\n   * @return {*} The predicate function for the specified operator.\n   */\n  getOperator (operator, opts) {\n    opts || (opts = {});\n    opts.operators || (opts.operators = {});\n    let ownOps = this.operators || {};\n    return isUndefined(opts.operators[operator]) ? ownOps[operator] || OPERATORS[operator] : opts.operators[operator];\n  }\n});\n\nCloudDatastoreAdapter.OPERATORS = OPERATORS;\n"],"names":["utils","Adapter","reserved"],"mappings":"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"}