{"version":3,"file":"js-data-cloud-datastore.js","sources":["../src/index.js"],"sourcesContent":["// Copyright 2016, Google, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n'use strict';\n\nimport {utils} from 'js-data';\nimport unique from 'mout/array/unique';\n\nconst {\n  addHiddenPropsToTarget,\n  deepMixIn,\n  fillIn,\n  forEachRelation,\n  forOwn,\n  get,\n  isArray,\n  isObject,\n  isString,\n  isUndefined,\n  plainCopy,\n  resolve,\n  set\n} = utils;\n\nconst reserved = [\n  'orderBy',\n  'sort',\n  'limit',\n  'offset',\n  'skip',\n  'where'\n];\n\nconst noop = function (...args) {\n  const self = this;\n  const opts = args[args.length - 1];\n  self.dbg(opts.op, ...args);\n  return resolve();\n};\n\nconst noop2 = function (...args) {\n  const self = this;\n  const opts = args[args.length - 2];\n  self.dbg(opts.op, ...args);\n  return resolve();\n};\n\nconst withoutRelations = function (mapper, props) {\n  const relationFields = mapper.relationFields || [];\n\n  // Remove relations\n  const _props = {};\n  forOwn(props, function (value, key) {\n    if (relationFields.indexOf(key) === -1) {\n      _props[key] = value;\n    }\n  });\n  return _props;\n};\n\nconst DEFAULTS = {\n  /**\n   * Whether to log debugging information.\n   *\n   * @name CloudDatastoreAdapter#debug\n   * @type {boolean}\n   * @default false\n   */\n  debug: false,\n\n  /**\n   * Whether to return a more detailed response object.\n   *\n   * @name CloudDatastoreAdapter#raw\n   * @type {boolean}\n   * @default false\n   */\n  raw: false\n};\n\nconst equal = function (query, field, value) {\n  return query.filter(field, '=', value);\n};\n\n/**\n * Default predicate functions for the filtering operators.\n *\n * @name CloudDatastoreAdapter.OPERATORS\n * @property {Function} == Equality operator.\n * @property {Function} > \"Greater than\" operator.\n * @property {Function} >= \"Greater than or equal to\" operator.\n * @property {Function} < \"Less than\" operator.\n * @property {Function} <= \"Less than or equal to\" operator.\n */\nconst OPERATORS = {\n  '==': equal,\n  '===': equal,\n  '>': function (query, field, value) {\n    return query.filter(field, '>', value);\n  },\n  '>=': function (query, field, value) {\n    return query.filter(field, '>=', value);\n  },\n  '<': function (query, field, value) {\n    return query.filter(field, '<', value);\n  },\n  '<=': function (query, field, value) {\n    return query.filter(field, '<=', value);\n  }\n};\n\n/**\n * CloudDatastoreAdapter class.\n *\n * @example\n * // Use Container instead of DataStore on the server\n * import {Container} from 'js-data'\n * import CloudDatastoreAdapter from 'js-data-cloud-datastore'\n *\n * // Create a store to hold your Mappers\n * const store = new Container()\n *\n * // Create an instance of CloudDatastoreAdapter with default settings\n * const adapter = new CloudDatastoreAdapter()\n *\n * // Mappers in \"store\" will use the CloudDatastore adapter by default\n * store.registerAdapter('datastore', adapter, { default: true })\n *\n * // Create a Mapper that maps to a \"user\" table\n * store.defineMapper('user')\n *\n * @class CloudDatastoreAdapter\n * @param {Object} [opts] Configuration opts.\n * @param {string} [opts.basePath=''] TODO\n * @param {boolean} [opts.debug=false] TODO\n */\nexport default function CloudDatastoreAdapter (opts) {\n  const self = this;\n  opts || (opts = {});\n  fillIn(opts, DEFAULTS);\n  fillIn(self, opts);\n\n  /**\n   * Override the default predicate functions for specified operators.\n   *\n   * @name CloudDatastoreAdapter#operators\n   * @type {Object}\n   * @default {}\n   */\n  self.operators || (self.operators = {});\n\n  /**\n   * Instance of gcloud used by this adapter.\n   *\n   * @name CloudDatastoreAdapter#gcloud\n   * @type {Object}\n   */\n  self.gcloud = require('gcloud')(opts.gcloud || {\n    projectId: process.env.GCLOUD_PROJECT\n  });\n\n  /**\n   * Instance of gcloud.datastore.dataset used by this adapter.\n   *\n   * @name CloudDatastoreAdapter#dataset\n   * @type {Object}\n   */\n  self.dataset = self.gcloud.datastore.dataset();\n}\n\naddHiddenPropsToTarget(CloudDatastoreAdapter.prototype, {\n  /**\n   * @name CloudDatastoreAdapter#afterCreate\n   * @method\n   */\n  afterCreate: noop2,\n\n  /**\n   * @name CloudDatastoreAdapter#afterCreateMany\n   * @method\n   */\n  afterCreateMany: noop2,\n\n  /**\n   * @name CloudDatastoreAdapter#afterDestroy\n   * @method\n   */\n  afterDestroy: noop2,\n\n  /**\n   * @name CloudDatastoreAdapter#afterDestroyAll\n   * @method\n   */\n  afterDestroyAll: noop2,\n\n  /**\n   * @name CloudDatastoreAdapter#afterFind\n   * @method\n   */\n  afterFind: noop2,\n\n  /**\n   * @name CloudDatastoreAdapter#afterFindAll\n   * @method\n   */\n  afterFindAll: noop2,\n\n  /**\n   * @name CloudDatastoreAdapter#afterUpdate\n   * @method\n   */\n  afterUpdate: noop2,\n\n  /**\n   * @name CloudDatastoreAdapter#afterUpdateAll\n   * @method\n   */\n  afterUpdateAll: noop2,\n\n  /**\n   * @name CloudDatastoreAdapter#afterUpdateMany\n   * @method\n   */\n  afterUpdateMany: noop2,\n\n  /**\n   * @name CloudDatastoreAdapter#beforeCreate\n   * @method\n   */\n  beforeCreate: noop,\n\n  /**\n   * @name CloudDatastoreAdapter#beforeCreateMany\n   * @method\n   */\n  beforeCreateMany: noop,\n\n  /**\n   * @name CloudDatastoreAdapter#beforeDestroy\n   * @method\n   */\n  beforeDestroy: noop,\n\n  /**\n   * @name CloudDatastoreAdapter#beforeDestroyAll\n   * @method\n   */\n  beforeDestroyAll: noop,\n\n  /**\n   * @name CloudDatastoreAdapter#beforeFind\n   * @method\n   */\n  beforeFind: noop,\n\n  /**\n   * @name CloudDatastoreAdapter#beforeFindAll\n   * @method\n   */\n  beforeFindAll: noop,\n\n  /**\n   * @name CloudDatastoreAdapter#beforeUpdate\n   * @method\n   */\n  beforeUpdate: noop,\n\n  /**\n   * @name CloudDatastoreAdapter#beforeUpdateAll\n   * @method\n   */\n  beforeUpdateAll: noop,\n\n  /**\n   * @name CloudDatastoreAdapter#beforeUpdateMany\n   * @method\n   */\n  beforeUpdateMany: noop,\n\n  /**\n   * @name CloudDatastoreAdapter#dbg\n   * @method\n   */\n  dbg (...args) {\n    this.log('debug', ...args);\n  },\n\n  /**\n   * Apply the specified selection query to the provided Datastore query.\n   *\n   * @name CloudDatastoreAdapter#filterSequence\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.operators] Override the default predicate functions\n   * for specified operators.\n   */\n  filterQuery (mapper, query, opts) {\n    const self = this;\n    let dsQuery;\n\n    if (opts && opts.query) {\n      dsQuery = opts.query;\n    }\n    query = plainCopy(query || {});\n    opts || (opts = {});\n    opts.operators || (opts.operators = {});\n    query.where || (query.where = {});\n    query.orderBy || (query.orderBy = query.sort);\n    query.orderBy || (query.orderBy = []);\n    query.skip || (query.skip = query.offset);\n\n    // Transform non-keyword properties to \"where\" clause configuration\n    forOwn(query, function (config, keyword) {\n      if (reserved.indexOf(keyword) === -1) {\n        if (isObject(config)) {\n          query.where[keyword] = config;\n        } else {\n          query.where[keyword] = {\n            '==': config\n          };\n        }\n        delete query[keyword];\n      }\n    });\n\n    // Filter\n    if (Object.keys(query.where).length !== 0) {\n      forOwn(query.where, function (criteria, field) {\n        if (!isObject(criteria)) {\n          query.where[field] = {\n            '==': criteria\n          };\n        }\n\n        forOwn(criteria, function (value, operator) {\n          let isOr = false;\n          let _operator = operator;\n          if (_operator && _operator[0] === '|') {\n            _operator = _operator.substr(1);\n            isOr = true;\n          }\n          let predicateFn = self.getOperator(_operator, opts);\n          if (predicateFn) {\n            const predicateResult = predicateFn(dsQuery, field, value);\n            if (isOr) {\n              throw new Error(`Operator ${operator} not supported!`);\n            } else {\n              dsQuery = predicateResult;\n            }\n          } else {\n            throw new Error(`Operator ${operator} not supported!`);\n          }\n        });\n      });\n    }\n\n    if (query.orderBy) {\n      if (isString(query.orderBy)) {\n        query.orderBy = [\n          [query.orderBy, 'asc']\n        ];\n      }\n      query.orderBy.forEach(function (clause) {\n        if (isString(clause)) {\n          clause = [clause, 'asc'];\n        }\n        dsQuery = clause[1].toUpperCase() === 'DESC' ? dsQuery.order(clause[0], { descending: true }) : dsQuery.order(clause[0]);\n      });\n    }\n\n    if (query.skip) {\n      dsQuery = dsQuery.offset(+query.skip);\n    }\n\n    if (query.limit) {\n      dsQuery = dsQuery.limit(+query.limit);\n    }\n\n    return dsQuery;\n  },\n\n  /**\n   * Private method used by create and createMany.\n   * @name CloudDatastoreAdapter#create\n   * @method\n   * @ignore\n   * @param {Object} mapper The mapper.\n   * @param {(Object|Object[])} records The record or records to be created.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _create (mapper, records, opts) {\n    const self = this;\n    const singular = !isArray(records);\n    if (singular) {\n      records = [records];\n    }\n    return new Promise(function (resolve, reject) {\n      let cursor;\n      const idAttribute = mapper.idAttribute;\n      const incompleteKey = self.dataset.key([mapper.name]);\n\n      // Remove relations\n      records = records.map(function (record) {\n        return withoutRelations(mapper, record);\n      });\n\n      self.dataset.runInTransaction(function (transaction, done) {\n        // Allocate ids\n        transaction.allocateIds(incompleteKey, records.length, function (err, keys) {\n          if (err) {\n            return reject(err);\n          }\n          const entities = records.map(function (_record, i) {\n            set(_record, idAttribute, keys[i].path[1]);\n            return {\n              key: keys[i],\n              data: _record\n            };\n          });\n          // Save records\n          self.dataset.save(entities, function (err, _cursor) {\n            if (err) {\n              return reject(err);\n            }\n            cursor = _cursor;\n            return done();\n          });\n        });\n      }, function (err) {\n        if (err) {\n          return reject(err);\n        }\n        return resolve([cursor, singular ? records[0] : records]);\n      });\n    });\n  },\n\n  /**\n   * Create a new record.\n   *\n   * @name CloudDatastoreAdapter#create\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The record to be created.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  create (mapper, props, opts) {\n    const self = this;\n    let op;\n    props || (props = {});\n    opts || (opts = {});\n\n    // beforeCreate lifecycle hook\n    op = opts.op = 'beforeCreate';\n    return resolve(self[op](mapper, props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      _props = isUndefined(_props) ? props : _props;\n      return self._create(mapper, _props, opts).then(function (result) {\n        let [apiResponse, record] = result;\n        apiResponse || (apiResponse = {});\n        apiResponse.data = record;\n        apiResponse.created = record ? 1 : 0;\n        apiResponse = self.getOpt('raw', opts) ? apiResponse : apiResponse.data;\n\n        // afterCreate lifecycle hook\n        op = opts.op = 'afterCreate';\n        return resolve(self[op](mapper, _props, opts, apiResponse)).then(function (_apiResponse) {\n          // Allow for re-assignment from lifecycle hook\n          return isUndefined(_apiResponse) ? apiResponse : _apiResponse;\n        });\n      });\n    });\n  },\n\n  /**\n   * Create multiple records in a single batch.\n   *\n   * @name CloudDatastoreAdapter#createMany\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Array} props Array of records to be created.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  createMany (mapper, props, opts) {\n    const self = this;\n    let op;\n    props || (props = {});\n    opts || (opts = {});\n\n    // beforeCreateMany lifecycle hook\n    op = opts.op = 'beforeCreateMany';\n    return resolve(self[op](mapper, props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      _props = isUndefined(_props) ? props : _props;\n      return self._create(mapper, _props, opts).then(function (result) {\n        let [apiResponse, records] = result;\n        apiResponse || (apiResponse = {});\n        records || (records = []);\n        apiResponse.data = records;\n        apiResponse.created = records.length;\n        apiResponse = self.getOpt('raw', opts) ? apiResponse : apiResponse.data;\n\n        // afterCreateMany lifecycle hook\n        op = opts.op = 'afterCreateMany';\n        return resolve(self[op](mapper, _props, opts, apiResponse)).then(function (_apiResponse) {\n          // Allow for re-assignment from lifecycle hook\n          return isUndefined(_apiResponse) ? apiResponse : _apiResponse;\n        });\n      });\n    });\n  },\n\n  /**\n   * Destroy the record with the given primary key.\n   *\n   * @name CloudDatastoreAdapter#destroy\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to destroy.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  destroy (mapper, id, opts) {\n    const self = this;\n    let op;\n    opts || (opts = {});\n\n    // beforeDestroy lifecycle hook\n    op = opts.op = 'beforeDestroy';\n    return resolve(self[op](mapper, id, opts)).then(function () {\n      return new Promise(function (resolve, reject) {\n        self.dataset.delete(self.dataset.key([mapper.name, id]), function (err, apiResponse) {\n          return err ? reject(err) : resolve(apiResponse);\n        });\n      });\n    }).then(function (apiResponse) {\n      if (apiResponse && apiResponse.mutation_result && apiResponse.mutation_result.index_updates) {\n        apiResponse.deleted = 1;\n      } else {\n        apiResponse.deleted = 0;\n      }\n      apiResponse = self.getOpt('raw', opts) ? apiResponse : undefined;\n\n      // afterDestroy lifecycle hook\n      op = opts.op = 'afterDestroy';\n      return resolve(self[op](mapper, id, opts, apiResponse)).then(function (_apiResponse) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_apiResponse) ? apiResponse : _apiResponse;\n      });\n    });\n  },\n\n  /**\n   * Destroy the records that match the selection `query`.\n   *\n   * @name CloudDatastoreAdapter#destroyAll\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.operators] Override the default predicate functions\n   * for specified operators.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  destroyAll (mapper, query, opts) {\n    const self = this;\n    const idAttribute = mapper.idAttribute;\n    let op, deleted;\n    let records = [];\n    query || (query = {});\n    opts || (opts = {});\n\n    // beforeDestroyAll lifecycle hook\n    op = opts.op = 'beforeDestroyAll';\n    return resolve(self[op](mapper, query, opts)).then(function () {\n      return self.findAll(mapper, query, { raw: false }).then(function (_records) {\n        records = _records;\n        if (records.length) {\n          deleted = records.length;\n          return new Promise(function (resolve, reject) {\n            const keys = [];\n            records.forEach(function (record) {\n              const id = get(record, idAttribute);\n              if (!isUndefined(id)) {\n                keys.push(self.dataset.key([mapper.name, id]));\n              }\n            });\n            self.dataset.delete(keys, function (err, apiResponse) {\n              return err ? reject(err) : resolve(apiResponse);\n            });\n          });\n        } else {\n          deleted = 0;\n        }\n      });\n    }).then(function (apiResponse) {\n      if (!apiResponse) {\n        apiResponse = {};\n      }\n      apiResponse.deleted = deleted;\n      apiResponse = self.getOpt('raw', opts) ? apiResponse : undefined;\n\n      // afterDestroyAll lifecycle hook\n      op = opts.op = 'afterDestroyAll';\n      return self[op](mapper, query, opts, apiResponse).then(function (_apiResponse) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_apiResponse) ? apiResponse : _apiResponse;\n      });\n    });\n  },\n\n  /**\n   * Retrieve the record with the given primary key.\n   *\n   * @name CloudDatastoreAdapter#find\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to retrieve.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {string[]} [opts.with=[]] Relations to eager load.\n   * @return {Promise}\n   */\n  find (mapper, id, opts) {\n    const self = this;\n    opts || (opts = {});\n    opts.with || (opts.with = []);\n    let op, record;\n    // beforeFind lifecycle hook\n    op = opts.op = 'beforeFind';\n    return resolve(self[op](mapper, id, opts)).then(function () {\n      return new Promise(function (resolve, reject) {\n        const key = self.dataset.key([self.getKind(mapper, opts), id]);\n        self.dataset.get(key, function (err, entity) {\n          if (err) {\n            return reject(err);\n          }\n          return resolve(entity ? entity.data : undefined);\n        });\n      }).then(function (_record) {\n        record = _record;\n        const tasks = [];\n\n        forEachRelation(mapper, opts, function (def, __opts) {\n          const relatedMapper = def.getRelation();\n          let task;\n\n          if ((def.type === 'hasOne' || def.type === 'hasMany') && def.foreignKey) {\n            task = self.findAll(relatedMapper, {\n              [def.foreignKey]: get(record, mapper.idAttribute)\n            }, __opts).then(function (relatedItems) {\n              if (def.type === 'hasOne' && relatedItems.length) {\n                set(record, def.localField, relatedItems[0]);\n              } else {\n                set(record, def.localField, relatedItems);\n              }\n              return relatedItems;\n            });\n          } else if (def.type === 'hasMany' && def.localKeys) {\n            let localKeys = [];\n            let itemKeys = get(record, def.localKeys) || [];\n            itemKeys = Array.isArray(itemKeys) ? itemKeys : Object.keys(itemKeys);\n            localKeys = localKeys.concat(itemKeys || []);\n            task = self.findAll(relatedMapper, {\n              where: {\n                [relatedMapper.idAttribute]: {\n                  'in': unique(localKeys).filter(function (x) { return x; })\n                }\n              }\n            }, __opts).then(function (relatedItems) {\n              set(record, def.localField, relatedItems);\n              return relatedItems;\n            });\n          } else if (def.type === 'belongsTo') {\n            task = self.find(relatedMapper, get(record, def.foreignKey), __opts).then(function (relatedItem) {\n              set(record, def.localField, relatedItem);\n              return relatedItem;\n            });\n          }\n\n          if (task) {\n            tasks.push(task);\n          }\n        });\n\n        return Promise.all(tasks);\n      });\n    }).then(function () {\n      let apiResponse = {\n        data: record,\n        found: record ? 1 : 0\n      };\n      apiResponse = self.getOpt('raw', opts) ? apiResponse : apiResponse.data;\n\n      // afterFind lifecycle hook\n      op = opts.op = 'afterFind';\n      return resolve(self[op](mapper, id, opts, apiResponse)).then(function (_apiResponse) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_apiResponse) ? apiResponse : _apiResponse;\n      });\n    });\n  },\n\n  /**\n   * Retrieve the records that match the selection `query`.\n   *\n   * @name CloudDatastoreAdapter#findAll\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {string[]} [opts.with=[]] Relations to eager load.\n   * @return {Promise}\n   */\n  findAll (mapper, query, opts) {\n    const self = this;\n    opts || (opts = {});\n    opts.with || (opts.with = []);\n    let op;\n    let records = [];\n\n    // beforeFindAll lifecycle hook\n    op = opts.op = 'beforeFindAll';\n    return resolve(self[op](mapper, query, opts)).then(function () {\n      return new Promise(function (resolve, reject) {\n        let dsQuery = self.dataset.createQuery(self.getKind(mapper, opts));\n        dsQuery = self.filterQuery(mapper, query, { query: dsQuery });\n        self.dataset.runQuery(dsQuery, function (err, entities) {\n          if (err) {\n            return reject(err);\n          }\n          return resolve(entities ? entities.map(function (entity) {\n            return entity.data;\n          }) : []);\n        });\n      }).then(function (_records) {\n        records = _records;\n        const tasks = [];\n        const idAttribute = mapper.idAttribute;\n\n        forEachRelation(mapper, opts, function (def, __opts) {\n          const relatedMapper = def.getRelation();\n          let task;\n\n          if ((def.type === 'hasOne' || def.type === 'hasMany') && def.foreignKey) {\n            task = Promise.all(records.map(function (item) {\n              return get(item, idAttribute);\n            }).filter(function (x) { return x; }).map(function (id) {\n              return self.findAll(relatedMapper, {\n                where: {\n                  [def.foreignKey]: id\n                }\n              }, __opts);\n            })).then(function (results) {\n              let relatedItems = [];\n              results.forEach(function (_relatedItems) {\n                relatedItems = relatedItems.concat(_relatedItems);\n              });\n              records.forEach(function (item) {\n                const attached = [];\n                relatedItems.forEach(function (relatedItem) {\n                  if (get(relatedItem, def.foreignKey) === get(item, idAttribute)) {\n                    attached.push(relatedItem);\n                  }\n                });\n                if (def.type === 'hasOne' && attached.length) {\n                  set(item, def.localField, attached[0]);\n                } else {\n                  set(item, def.localField, attached);\n                }\n              });\n              return relatedItems;\n            });\n          } else if (def.type === 'hasMany' && def.localKeys) {\n            let localKeys = [];\n            records.forEach(function (item) {\n              let itemKeys = get(item, def.localKeys) || [];\n              itemKeys = Array.isArray(itemKeys) ? itemKeys : Object.keys(itemKeys);\n              localKeys = localKeys.concat(itemKeys || []);\n            });\n            task = Promise.all(unique(localKeys).filter(function (x) { return x; }).map(function (id) {\n              return self.find(relatedMapper, id, __opts);\n            })).then(function (relatedItems) {\n              records.forEach(function (item) {\n                const attached = [];\n                let itemKeys = get(item, def.localKeys) || [];\n                itemKeys = Array.isArray(itemKeys) ? itemKeys : Object.keys(itemKeys);\n                relatedItems.forEach(function (relatedItem) {\n                  if (itemKeys && itemKeys.indexOf(relatedItem[relatedMapper.idAttribute]) !== -1) {\n                    attached.push(relatedItem);\n                  }\n                });\n                set(item, def.localField, attached);\n              });\n              return relatedItems;\n            });\n          } else if (def.type === 'belongsTo') {\n            task = Promise.all(records.map(function (item) {\n              return get(item, def.foreignKey);\n            }).filter(function (x) { return x; }).map(function (id) {\n              return self.find(relatedMapper, id, __opts);\n            })).then(function (relatedItems) {\n              records.forEach(function (item) {\n                relatedItems.forEach(function (relatedItem) {\n                  if (relatedItem[relatedMapper.idAttribute] === get(item, def.foreignKey)) {\n                    set(item, def.localField, relatedItem);\n                  }\n                });\n              });\n              return relatedItems;\n            });\n          }\n\n          if (task) {\n            tasks.push(task);\n          }\n        });\n        return Promise.all(tasks);\n      });\n    }).then(function () {\n      records || (records = []);\n      let apiResponse = {\n        data: records,\n        found: records.length\n      };\n      apiResponse = self.getOpt('raw', opts) ? apiResponse : apiResponse.data;\n\n      // afterFindAll lifecycle hook\n      op = opts.op = 'afterFindAll';\n      return resolve(self[op](mapper, query, opts, apiResponse)).then(function (_apiResponse) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_apiResponse) ? apiResponse : _apiResponse;\n      });\n    });\n  },\n\n  /**\n   * Resolve the Cloud Datastore kind for the specified Mapper with the given\n   * options.\n   *\n   * @name CloudDatastoreAdapter#getKind\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.kind] Datastore kind.\n   * @return {string} The kind.\n   */\n  getKind (mapper, opts) {\n    opts || (opts = {});\n    return isUndefined(opts.kind) ? (isUndefined(mapper.kind) ? mapper.name : mapper.kind) : opts.kind;\n  },\n\n  /**\n   * Resolve the predicate function for the specified operator based on the\n   * given options and this adapter's settings.\n   *\n   * @name CloudDatastoreAdapter#getOperator\n   * @method\n   * @param {string} operator The name of the operator.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.operators] Override the default predicate functions\n   * for specified operators.\n   * @return {*} The predicate function for the specified operator.\n   */\n  getOperator (operator, opts) {\n    opts || (opts = {});\n    opts.operators || (opts.operators = {});\n    let ownOps = this.operators || {};\n    return isUndefined(opts.operators[operator]) ? ownOps[operator] || OPERATORS[operator] : opts.operators[operator];\n  },\n\n  /**\n   * Resolve the value of the specified option based on the given options and\n   * this adapter's settings.\n   *\n   * @name CloudDatastoreAdapter#getOpt\n   * @method\n   * @param {string} opt The name of the option.\n   * @param {Object} [opts] Configuration options.\n   * @return {*} The value of the specified option.\n   */\n  getOpt (opt, opts) {\n    opts || (opts = {});\n    return isUndefined(opts[opt]) ? plainCopy(this[opt]) : plainCopy(opts[opt]);\n  },\n\n  /**\n   * Logging utility method.\n   *\n   * @name CloudDatastoreAdapter#log\n   * @method\n   */\n  log (level, ...args) {\n    if (level && !args.length) {\n      args.push(level);\n      level = 'debug';\n    }\n    if (level === 'debug' && !this.debug) {\n      return;\n    }\n    const prefix = `${level.toUpperCase()}: (CloudDatastoreAdapter)`;\n    if (console[level]) {\n      console[level](prefix, ...args);\n    } else {\n      console.log(prefix, ...args);\n    }\n  },\n\n  _update (mapper, records, props, opts) {\n    const self = this;\n    const singular = !isArray(records);\n    if (singular) {\n      records = [records];\n      props = [props];\n    }\n    return new Promise(function (resolve, reject) {\n      if (!records.length) {\n        return resolve(singular ? undefined : []);\n      }\n      const idAttribute = mapper.idAttribute;\n      const entities = [];\n      const _records = [];\n      records.forEach(function (record, i) {\n        if (!record) {\n          return;\n        }\n        const id = get(record, idAttribute);\n        if (!isUndefined(id)) {\n          deepMixIn(record, props[i]);\n          entities.push({\n            method: 'update',\n            key: self.dataset.key([self.getKind(mapper, opts), id]),\n            data: withoutRelations(mapper, record)\n          });\n          _records.push(record);\n        }\n      });\n      if (!_records.length) {\n        return resolve(singular ? undefined : []);\n      }\n      self.dataset.save(entities, function (err, apiResponse) {\n        if (err) {\n          return reject(err);\n        }\n        return resolve([apiResponse, singular ? _records[0] : _records]);\n      });\n    });\n  },\n\n  /**\n   * Update the records that match the selection `query`. If a record with the\n   * specified primary key cannot be found then no update is performed and the\n   * promise is resolved with `undefined`.\n   *\n   * @name CloudDatastoreAdapter#update\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id The primary key of the record to be updated.\n   * @param {Object} props The update to apply to the record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  update (mapper, id, props, opts) {\n    const self = this;\n    props || (props = {});\n    opts || (opts = {});\n    let op;\n\n    // beforeUpdate lifecycle hook\n    op = opts.op = 'beforeUpdate';\n    return resolve(self[op](mapper, id, props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = isUndefined(_props) ? props : _props;\n      return self.find(mapper, id, { raw: false }).then(function (record) {\n        if (record) {\n          return self._update(mapper, record, props, opts);\n        } else {\n          throw new Error('Not Found');\n        }\n      });\n    }).then(function (result) {\n      let [apiResponse, record] = result;\n      apiResponse || (apiResponse = {});\n      apiResponse.data = record;\n      apiResponse.updated = 1;\n      apiResponse = self.getOpt('raw', opts) ? apiResponse : apiResponse.data;\n\n      // afterUpdate lifecycle hook\n      op = opts.op = 'afterUpdate';\n      return resolve(self[op](mapper, id, props, opts, apiResponse)).then(function (_apiResponse) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_apiResponse) ? apiResponse : _apiResponse;\n      });\n    });\n  },\n\n  /**\n   * Update the records that match the selection `query`.\n   *\n   * @name CloudDatastoreAdapter#updateAll\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The update to apply to the selected records.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  updateAll (mapper, props, query, opts) {\n    const self = this;\n    props || (props = {});\n    query || (query = {});\n    opts || (opts = {});\n    let op;\n\n    // beforeUpdateAll lifecycle hook\n    op = opts.op = 'beforeUpdateAll';\n    return resolve(self[op](mapper, props, query, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = isUndefined(_props) ? props : _props;\n      return self.findAll(mapper, query).then(function (records) {\n        if (records.length) {\n          return self._update(mapper, records, records.map(function () { return props; }), opts);\n        }\n        return [];\n      });\n    }).then(function (result) {\n      let [apiResponse, records] = result;\n      apiResponse || (apiResponse = {});\n      records || (records = []);\n      apiResponse.data = records;\n      apiResponse.updated = records.length;\n      apiResponse = self.getOpt('raw', opts) ? apiResponse : apiResponse.data;\n\n      // afterUpdateAll lifecycle hook\n      op = opts.op = 'afterUpdateAll';\n      return resolve(self[op](mapper, props, query, opts, apiResponse)).then(function (_apiResponse) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_apiResponse) ? apiResponse : _apiResponse;\n      });\n    });\n  },\n\n  /**\n   * Update the given records in a single batch.\n   *\n   * @name CloudDatastoreAdapter#updateMany\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} records The records to update.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  updateMany (mapper, records, opts) {\n    const self = this;\n    records || (records = []);\n    opts || (opts = {});\n    let op;\n\n    // beforeUpdateMany lifecycle hook\n    op = opts.op = 'beforeUpdateMany';\n    return resolve(self[op](mapper, records, opts)).then(function (_records) {\n      // Allow for re-assignment from lifecycle hook\n      records = isUndefined(_records) ? records : _records;\n      const idAttribute = mapper.idAttribute;\n      _records = records.filter(function (record) {\n        return !isUndefined(get(record, idAttribute));\n      });\n      return Promise.all(_records.map(function (record) {\n        return self.find(mapper, get(record, idAttribute));\n      }));\n    }).then(function (_records) {\n      if (_records.length) {\n        return self._update(mapper, _records, records, opts);\n      }\n      return [];\n    }).then(function (result) {\n      let [apiResponse, _records] = result;\n      apiResponse || (apiResponse = {});\n      _records || (_records = []);\n      apiResponse.data = _records;\n      apiResponse.updated = _records.length;\n      apiResponse = self.getOpt('raw', opts) ? apiResponse : apiResponse.data;\n\n      // afterUpdateMany lifecycle hook\n      op = opts.op = 'afterUpdateMany';\n      return resolve(self[op](mapper, records, opts, apiResponse)).then(function (_apiResponse) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_apiResponse) ? apiResponse : _apiResponse;\n      });\n    });\n  }\n});\n\nCloudDatastoreAdapter.OPERATORS = OPERATORS;\n"],"names":["utils"],"mappings":"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"}